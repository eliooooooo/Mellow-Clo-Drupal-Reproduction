<?php

declare(strict_types=1);

/**
 * @file
 * Functions to support theming in the mellow_clo theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function mellow_clo_preprocess_html(array &$variables): void {

}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function mellow_clo_preprocess_page(array &$variables): void {
  // Add newsletter form to every node.
  $webform1_id = 'newsletter';
  $webform1 = \Drupal\webform\Entity\Webform::load($webform1_id);

  if ($webform1) {
    $form1 = \Drupal::entityTypeManager()->getViewBuilder('webform')->view($webform1);
    $variables['page']['footer_top'] = ['newsletter_form' => $form1] + $variables['page']['footer_top'];
  }
}

/**
 * Alter page_title hook to add classes to page title.
 */
function mellow_clo_preprocess_page_title(array &$variables): void {
  if (isset($variables['title'])) {
    if (!isset($variables['title_attributes']['class'])) {
      $variables['title_attributes']['class'] = [];
    }

    $variables['title_attributes']['class'][] = 'text-center text-4xl font-bold leading-10 mb-12';
  }
}

/**
 * Implements hook_preprocess_HOOK() for node templates.
 */
function mellow_clo_preprocess_node(array &$variables) {
  if($variables['node']->bundle() == 'expedition') {
    $nid = $variables['node']->id();
    $url_object = \Drupal\Core\Url::fromRoute('entity.node.canonical', ['node' => $nid], ['absolute' => TRUE]);
    $variables['absolute_url'] = $url_object->toString();

    // Add expedition date to the variables.
    if (isset($variables['content']['field_expedition_date'])) {
      $date_value = $variables['content']['field_expedition_date']['#items']->value;
      $date = \Drupal::service('date.formatter')->format(strtotime($date_value), 'custom', 'M d, Y');
      $variables['expedition_date'] = $date;
    }

    // Add "you_may_also_like" view to product node.
    $view_id = 'you_may_also_like';
    $display_id = 'block_2';
    $view = \Drupal\views\Views::getView($view_id);

    if ($view) {
      $view->setDisplay($display_id);
      $view->preExecute();
      $view->execute();
      $variables['you_may_also_like'] = $view->render();
    }
  }

  if ($variables['node']->bundle() == 'product') {
    // Add contact form to product node.
    $webform2_id = 'contact';
    $webform2 = \Drupal\webform\Entity\Webform::load($webform2_id);

    if ($webform2) {
      $form2 = \Drupal::entityTypeManager()->getViewBuilder('webform')->view($webform2);
      $variables['contact_form'] = $form2;
    }

    // Add "you_may_also_like" view to product node.
    $view_id = 'you_may_also_like';
    $display_id = 'block_1';
    $view = \Drupal\views\Views::getView($view_id);

    if ($view) {
      $view->setDisplay($display_id);
      $view->preExecute();
      $view->execute();
      $variables['you_may_also_like'] = $view->render();
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for field templates.
 */
function mellow_clo_preprocess_field(array &$variables) {
  if ($variables['element']['#field_name'] == 'title' && $variables['element']['#bundle'] == 'expedition') {
    // Check if we are on a full node page.
    if ($variables['element']['#view_mode'] == 'full') {
      // Add expedition date to the field variables.
      if (isset($variables['element']['#object']->field_expedition_date)) {
        $date_value = $variables['element']['#object']->field_expedition_date->value;
        $date = \Drupal::service('date.formatter')->format(strtotime($date_value), 'custom', 'd M, Y');
        $variables['expedition_date'] = $date;
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form_element templates.
 */
function mellow_clo_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  // Add a suggestion based on the form ID.
  if (isset($variables['element']['#form_id'])) {
    $suggestions[] = 'form_element__' . $variables['element']['#form_id'];
  }

  // Add a suggestion based on the element type.
  if (isset($variables['element']['#type'])) {
    $suggestions[] = 'form_element__type__' . $variables['element']['#type'];
  }

  // Add a suggestion based on the element name.
  if (isset($variables['element']['#name'])) {
    $suggestions[] = 'form_element__name__' . $variables['element']['#name'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function mellow_clo_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  // Add a suggestion based on the form ID.
  if (isset($variables['element']['#form_id'])) {
    $suggestions[] = 'form__' . $variables['element']['#form_id'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for fieldset templates.
 */
function mellow_clo_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  // Add a suggestion based on the fieldset element type.
  if (isset($variables['element']['#type'])) {
    $suggestions[] = 'fieldset__' . $variables['element']['#type'];
  }
}
